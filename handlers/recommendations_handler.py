"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏" –ø–æ—Å–ª–µ —Ä–∞–∑–±–æ—Ä–∞ –õ—É–Ω—ã.
"""

import logging
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext

from db import get_session
from models import User, Prediction, Planet, PredictionType, AdditionalProfile
from sqlalchemy import select
from queue_sender import send_recommendation_to_queue

logger = logging.getLogger(__name__)


async def handle_get_recommendations(callback: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏'
    
    Args:
        callback: CallbackQuery –æ—Ç –∫–Ω–æ–ø–∫–∏
        state: FSMContext –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
    """
    await callback.answer()
    
    user_id = callback.from_user.id
    logger.info(f"User {user_id} requested recommendations")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async with get_session() as session:
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_result = await session.execute(
            select(User).where(User.telegram_id == user_id)
        )
        user = user_result.scalar_one_or_none()
        
        if not user:
            if callback.message:
                await callback.message.answer(
                    "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /start"
                )
            return
        
        # –ù–∞—Ö–æ–¥–∏–º –≥–æ—Ç–æ–≤—ã–π —Ä–∞–∑–±–æ—Ä –õ—É–Ω—ã (–æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π)
        prediction_result = await session.execute(
            select(Prediction).where(
                Prediction.user_id == user.user_id,
                Prediction.planet == Planet.moon,
                Prediction.prediction_type == PredictionType.free,
                Prediction.is_active.is_(True),
                Prediction.is_deleted.is_(False),
                Prediction.moon_analysis.is_not(None)  # –ì–æ—Ç–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
            ).order_by(Prediction.created_at.desc())  # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–æ–∑–¥–∞–Ω–Ω—ã–π
        )
        prediction = prediction_result.scalar_one_or_none()
        
        if not prediction or not prediction.moon_analysis:
            if callback.message:
                await callback.message.answer(
                    "‚ùå –†–∞–∑–±–æ—Ä –õ—É–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤.\n\n"
                    "–°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç–µ —Ä–∞–∑–±–æ—Ä –õ—É–Ω—ã, –∞ –∑–∞—Ç–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏."
                )
            return
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –¥–ª—è –∫–∞–∫–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—Ç—Å—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        profile_id = prediction.profile_id
        profile_name = None
        
        if profile_id:
            # –≠—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å - –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
            profile_result = await session.execute(
                select(AdditionalProfile).where(AdditionalProfile.profile_id == profile_id)
            )
            profile = profile_result.scalar_one_or_none()
            if profile:
                profile_name = profile.full_name
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    if callback.message:
        if profile_name:
            message_text = (
                f"üí° –ì–æ—Ç–æ–≤–ª—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ "
                f"—Ä–∞–∑–±–æ—Ä–∞ –õ—É–Ω—ã –¥–ª—è {profile_name}...\n\n"
                f"‚è≥ –≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥"
            )
        else:
            message_text = (
                "üí° –ì–æ—Ç–æ–≤–ª—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ "
                "—Ç–≤–æ–µ–≥–æ —Ä–∞–∑–±–æ—Ä–∞ –õ—É–Ω—ã...\n\n"
                "‚è≥ –≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥"
            )
        await callback.message.answer(message_text)
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –æ—á–µ—Ä–µ–¥—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        await send_recommendation_to_queue(
            prediction_id=prediction.prediction_id,
            user_telegram_id=user_id,
            moon_analysis=prediction.moon_analysis,
            profile_id=profile_id
        )
        
        logger.info(f"Recommendation request sent to queue for user {user_id}")
        
    except Exception as e:
        logger.error(f"Failed to send recommendation request: {e}")
        if callback.message:
            await callback.message.answer(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
            )
